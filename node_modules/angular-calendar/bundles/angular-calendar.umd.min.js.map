{
  "version": 3,
  "file": "angular-calendar.umd.min.js",
  "sources": [
    "ng://angular-calendar/node_modules/tslib/tslib.es6.js",
    "ng://angular-calendar/out/modules/common/util.ts",
    "ng://angular-calendar/out/modules/common/calendar-event-actions.component.ts",
    "ng://angular-calendar/out/modules/common/calendar-event-title.component.ts",
    "ng://angular-calendar/out/modules/common/calendar-tooltip.directive.ts",
    "ng://angular-calendar/out/modules/common/calendar-previous-view.directive.ts",
    "ng://angular-calendar/out/modules/common/calendar-next-view.directive.ts",
    "ng://angular-calendar/out/modules/common/calendar-today.directive.ts",
    "ng://angular-calendar/out/modules/common/calendar-angular-date-formatter.provider.ts",
    "ng://angular-calendar/out/modules/common/calendar-date-formatter.provider.ts",
    "ng://angular-calendar/out/modules/common/calendar-date.pipe.ts",
    "ng://angular-calendar/out/modules/common/calendar-event-title-formatter.provider.ts",
    "ng://angular-calendar/out/modules/common/calendar-event-title.pipe.ts",
    "ng://angular-calendar/out/modules/common/click.directive.ts",
    "ng://angular-calendar/out/modules/common/calendar-utils.provider.ts",
    "ng://angular-calendar/out/modules/common/calendar-moment-date-formatter.provider.ts",
    "ng://angular-calendar/out/modules/common/calendar-native-date-formatter.provider.ts",
    "ng://angular-calendar/out/modules/common/calendar-common.module.ts",
    "ng://angular-calendar/out/modules/month/calendar-month-view.component.ts",
    "ng://angular-calendar/out/modules/month/calendar-month-view-header.component.ts",
    "ng://angular-calendar/out/modules/month/calendar-month-cell.component.ts",
    "ng://angular-calendar/out/modules/month/calendar-open-day-events.component.ts",
    "ng://angular-calendar/out/modules/month/calendar-month.module.ts",
    "ng://angular-calendar/out/modules/common/calendar-drag-helper.provider.ts",
    "ng://angular-calendar/out/modules/common/calendar-resize-helper.provider.ts",
    "ng://angular-calendar/out/modules/week/calendar-week-view.component.ts",
    "ng://angular-calendar/out/modules/week/calendar-week-view-header.component.ts",
    "ng://angular-calendar/out/modules/week/calendar-week-view-event.component.ts",
    "ng://angular-calendar/out/modules/week/calendar-week.module.ts",
    "ng://angular-calendar/out/modules/day/calendar-day-view.component.ts",
    "ng://angular-calendar/out/modules/day/calendar-all-day-event.component.ts",
    "ng://angular-calendar/out/modules/day/calendar-day-view-hour-segment.component.ts",
    "ng://angular-calendar/out/modules/day/calendar-day-view-event.component.ts",
    "ng://angular-calendar/out/modules/day/calendar-day.module.ts",
    "ng://angular-calendar/out/modules/calendar.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import {\n  CalendarEvent,\n  validateEvents as validateEventsWithoutLog,\n  WeekDay\n} from 'calendar-utils';\n\nexport const validateEvents = (events: CalendarEvent[]) => {\n  const warn = (...args) => console.warn('angular-calendar', ...args);\n  return validateEventsWithoutLog(events, warn);\n};\n\nexport function isInside(outer: ClientRect, inner: ClientRect): boolean {\n  return (\n    outer.left <= inner.left &&\n    inner.left <= outer.right &&\n    outer.left <= inner.right &&\n    inner.right <= outer.right &&\n    outer.top <= inner.top &&\n    inner.top <= outer.bottom &&\n    outer.top <= inner.bottom &&\n    inner.bottom <= outer.bottom\n  );\n}\n\nexport const trackByEventId = (index: number, event: CalendarEvent) =>\n  event.id ? event.id : event;\n\nexport const trackByWeekDayHeaderDate = (index: number, day: WeekDay) =>\n  day.date.toISOString();\n\nexport const trackByIndex = (index: number) => index;\n",
    "import { Component, Input } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { trackByIndex } from './util';\n\n@Component({\n  selector: 'mwl-calendar-event-actions',\n  template: `\n    <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\n      <a\n        class=\"cal-event-action\"\n        href=\"javascript:;\"\n        *ngFor=\"let action of event.actions; trackBy:trackByIndex\"\n        (mwlClick)=\"action.onClick({event: event})\"\n        [ngClass]=\"action.cssClass\"\n        [innerHtml]=\"action.label\">\n      </a>\n    </span>\n  `\n})\nexport class CalendarEventActionsComponent {\n  @Input() event: CalendarEvent;\n  trackByIndex = trackByIndex;\n}\n",
    "import { Component, Input, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-event-title',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-view=\"view\">\n      <a\n        class=\"cal-event-title\"\n        href=\"javascript:;\"\n        [innerHTML]=\"event.title | calendarEventTitle:view:event\">\n      </a>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        view: view\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarEventTitleComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() view: string;\n}\n",
    "import {\n  Directive,\n  Component,\n  HostListener,\n  OnDestroy,\n  Input,\n  ComponentRef,\n  Injector,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ElementRef,\n  ComponentFactory,\n  Inject,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Positioning } from 'positioning';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-contents=\"contents\"\n      let-placement=\"placement\"\n      let-event=\"event\">\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\n        <div class=\"cal-tooltip-arrow\"></div>\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        contents: contents,\n        placement: placement,\n        event: event\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarTooltipWindowComponent {\n  @Input() contents: string;\n\n  @Input() placement: string;\n\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n\n@Directive({\n  selector: '[mwlCalendarTooltip]'\n})\nexport class CalendarTooltipDirective implements OnDestroy {\n  @Input('mwlCalendarTooltip') contents: string; // tslint:disable-line no-input-rename\n\n  @Input('tooltipPlacement') placement: string = 'top'; // tslint:disable-line no-input-rename\n\n  @Input('tooltipTemplate') customTemplate: TemplateRef<any>; // tslint:disable-line no-input-rename\n\n  @Input('tooltipEvent') event: CalendarEvent; // tslint:disable-line no-input-rename\n\n  @Input('tooltipAppendToBody') appendToBody: boolean; // tslint:disable-line no-input-rename\n\n  private tooltipFactory: ComponentFactory<CalendarTooltipWindowComponent>;\n  private tooltipRef: ComponentRef<CalendarTooltipWindowComponent>;\n  private positioning: Positioning = new Positioning();\n\n  constructor(\n    private elementRef: ElementRef,\n    private injector: Injector,\n    private renderer: Renderer2,\n    componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private document //tslint:disable-line\n  ) {\n    this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(\n      CalendarTooltipWindowComponent\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.hide();\n  }\n\n  @HostListener('mouseenter')\n  onMouseOver(): void {\n    this.show();\n  }\n\n  @HostListener('mouseleave')\n  onMouseOut(): void {\n    this.hide();\n  }\n\n  private show(): void {\n    if (!this.tooltipRef && this.contents) {\n      this.tooltipRef = this.viewContainerRef.createComponent(\n        this.tooltipFactory,\n        0,\n        this.injector,\n        []\n      );\n      this.tooltipRef.instance.contents = this.contents;\n      this.tooltipRef.instance.placement = this.placement;\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\n      this.tooltipRef.instance.event = this.event;\n      if (this.appendToBody) {\n        this.document.body.appendChild(this.tooltipRef.location.nativeElement);\n      }\n      requestAnimationFrame(() => {\n        this.positionTooltip();\n      });\n    }\n  }\n\n  private hide(): void {\n    if (this.tooltipRef) {\n      this.viewContainerRef.remove(\n        this.viewContainerRef.indexOf(this.tooltipRef.hostView)\n      );\n      this.tooltipRef = null;\n    }\n  }\n\n  private positionTooltip(): void {\n    if (this.tooltipRef) {\n      const targetPosition: ClientRect = this.positioning.positionElements(\n        this.elementRef.nativeElement,\n        this.tooltipRef.location.nativeElement.children[0],\n        this.placement,\n        this.appendToBody\n      );\n\n      const elm: HTMLElement = this.tooltipRef.location.nativeElement\n        .children[0];\n\n      this.renderer.setStyle(elm, 'top', `${targetPosition.top}px`);\n      this.renderer.setStyle(elm, 'left', `${targetPosition.left}px`);\n    }\n  }\n}\n",
    "import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport subDays from 'date-fns/sub_days/index';\nimport subWeeks from 'date-fns/sub_weeks/index';\nimport subMonths from 'date-fns/sub_months/index';\n\n/**\n * Change the view date to the previous view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarPreviousView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Previous\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarPreviousView]'\n})\nexport class CalendarPreviousViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: string;\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const subFn: any = {\n      day: subDays,\n      week: subWeeks,\n      month: subMonths\n    }[this.view];\n\n    this.viewDateChange.emit(subFn(this.viewDate, 1));\n  }\n}\n",
    "import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport addDays from 'date-fns/add_days/index';\nimport addWeeks from 'date-fns/add_weeks/index';\nimport addMonths from 'date-fns/add_months/index';\n\n/**\n * Change the view date to the next view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarNextView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Next\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarNextView]'\n})\nexport class CalendarNextViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: string;\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const addFn: any = {\n      day: addDays,\n      week: addWeeks,\n      month: addMonths\n    }[this.view];\n\n    this.viewDateChange.emit(addFn(this.viewDate, 1));\n  }\n}\n",
    "import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport startOfToday from 'date-fns/start_of_today/index';\n\n/**\n * Change the view date to the current day. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarToday\n *  [(viewDate)]=\"viewDate\">\n *  Today\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarToday]'\n})\nexport class CalendarTodayDirective {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    this.viewDateChange.emit(startOfToday());\n  }\n}\n",
    "import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport getISOWeek from 'date-fns/get_iso_week/index';\nimport { DatePipe } from '@angular/common';\n\n/**\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\n */\nexport class CalendarAngularDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'EEEE', null, locale);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'd', null, locale);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'MMMM y', null, locale);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'EEEE', null, locale);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'MMM d', null, locale);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({ date, locale }: DateFormatterParams): string {\n    const year: string = new DatePipe(locale).transform(\n      date,\n      'y',\n      null,\n      locale\n    );\n    const weekNumber: number = getISOWeek(date);\n    return `Week ${weekNumber} of ${year}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'h a', null, locale);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(\n      date,\n      'EEEE, MMMM d, y',\n      null,\n      locale\n    );\n  }\n}\n",
    "import { CalendarAngularDateFormatter } from './calendar-angular-date-formatter.provider';\n\n/**\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\n *\n * If you wish, you may override any of the defaults via angulars DI. For example:\n *\n * ```typescript\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n * import { DatePipe } from '@angular/common';\n *\n * class CustomDateFormatter extends CalendarDateFormatter {\n *\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n *     return new DatePipe(locale).transform(date, 'EEE', locale); // use short week days\n *   }\n *\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *   provide: CalendarDateFormatter,\n *   useClass: CustomDateFormatter\n * }]\n * ```\n */\nexport class CalendarDateFormatter extends CalendarAngularDateFormatter {}\n",
    "import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\n\n/**\n * This pipe is primarily for rendering the current view title. Example usage:\n * ```typescript\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\n * ```\n */\n@Pipe({\n  name: 'calendarDate'\n})\nexport class CalendarDatePipe implements PipeTransform {\n  constructor(\n    private dateFormatter: CalendarDateFormatter,\n    @Inject(LOCALE_ID) private locale: string\n  ) {}\n\n  transform(date: Date, method: string, locale: string = this.locale): string {\n    return this.dateFormatter[method]({ date, locale });\n  }\n}\n",
    "import { CalendarEvent } from 'calendar-utils';\n\n/**\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\n *\n * ```typescript\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\n *\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n *\n *   month(event: CalendarEvent): string {\n *     return `Custom prefix: ${event.title}`;\n *   }\n *\n * }\n *\n * // in your component\n * providers: [{\n *  provide: CalendarEventTitleFormatter,\n *  useClass: CustomEventTitleFormatter\n * }]\n * ```\n */\nexport class CalendarEventTitleFormatter {\n  /**\n   * The month view event title.\n   */\n  month(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The month view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  monthTooltip(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event title.\n   */\n  week(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  weekTooltip(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event title.\n   */\n  day(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  dayTooltip(event: CalendarEvent): string {\n    return event.title;\n  }\n}\n",
    "import { Pipe, PipeTransform } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\n\n@Pipe({\n  name: 'calendarEventTitle'\n})\nexport class CalendarEventTitlePipe implements PipeTransform {\n  constructor(private calendarEventTitle: CalendarEventTitleFormatter) {}\n\n  transform(title: string, titleType: string, event: CalendarEvent): string {\n    return this.calendarEventTitle[titleType](event);\n  }\n}\n",
    "import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\n@Directive({\n  selector: '[mwlClick]'\n})\nexport class ClickDirective implements OnInit, OnDestroy {\n  @Output('mwlClick') click: EventEmitter<MouseEvent> = new EventEmitter(); // tslint:disable-line\n\n  private removeListener: () => void;\n\n  constructor(private renderer: Renderer2, private elm: ElementRef) {}\n\n  ngOnInit(): void {\n    const eventName: string =\n      typeof window !== 'undefined' && typeof window['Hammer'] !== 'undefined'\n        ? 'tap'\n        : 'click';\n    this.removeListener = this.renderer.listen(\n      this.elm.nativeElement,\n      eventName,\n      event => {\n        this.click.next(event);\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.removeListener();\n  }\n}\n",
    "import { Injectable } from '@angular/core';\nimport {\n  getMonthView,\n  GetMonthViewArgs,\n  MonthView,\n  getWeekViewHeader,\n  GetWeekViewHeaderArgs,\n  WeekDay,\n  getWeekView,\n  GetWeekViewArgs,\n  getDayView,\n  GetDayViewArgs,\n  DayView,\n  getDayViewHourGrid,\n  GetDayViewHourGridArgs,\n  DayViewHour,\n  WeekView\n} from 'calendar-utils';\n\n@Injectable()\nexport class CalendarUtils {\n  getMonthView(args: GetMonthViewArgs): MonthView {\n    return getMonthView(args);\n  }\n\n  getWeekViewHeader(args: GetWeekViewHeaderArgs): WeekDay[] {\n    return getWeekViewHeader(args);\n  }\n\n  getWeekView(args: GetWeekViewArgs): WeekView {\n    return getWeekView(args);\n  }\n\n  getDayView(args: GetDayViewArgs): DayView {\n    return getDayView(args);\n  }\n\n  getDayViewHourGrid(args: GetDayViewHourGridArgs): DayViewHour[] {\n    return getDayViewHourGrid(args);\n  }\n}\n",
    "import { InjectionToken, Inject } from '@angular/core';\nimport {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\n\nexport const MOMENT: InjectionToken<string> = new InjectionToken('Moment');\n\n/**\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\n *\n * ```typescript\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\n * import moment from 'moment';\n *\n * // in your component\n * provide: [{\n *   provide: MOMENT, useValue: moment\n * }, {\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\n * }]\n *\n * ```\n */\nexport class CalendarMomentDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * @hidden\n   */\n  constructor(@Inject(MOMENT) private moment: any) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('D');\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('MMMM YYYY');\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('D MMM');\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('[Week] W [of] YYYY');\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('ha');\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd, D MMMM, YYYY');\n  }\n}\n",
    "import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport getISOWeek from 'date-fns/get_iso_week/index';\n\n/**\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\n *\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\n */\nexport class CalendarNativeDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'long'\n    }).format(date);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'short'\n    }).format(date);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({ date, locale }: DateFormatterParams): string {\n    const year: string = new Intl.DateTimeFormat(locale, {\n      year: 'numeric'\n    }).format(date);\n    const weekNumber: number = getISOWeek(date);\n    return `Week ${weekNumber} of ${year}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      weekday: 'long'\n    }).format(date);\n  }\n}\n",
    "import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DraggableHelper } from 'angular-draggable-droppable';\nimport { CalendarEventActionsComponent } from './calendar-event-actions.component';\nimport { CalendarEventTitleComponent } from './calendar-event-title.component';\nimport {\n  CalendarTooltipDirective,\n  CalendarTooltipWindowComponent\n} from './calendar-tooltip.directive';\nimport { CalendarPreviousViewDirective } from './calendar-previous-view.directive';\nimport { CalendarNextViewDirective } from './calendar-next-view.directive';\nimport { CalendarTodayDirective } from './calendar-today.directive';\nimport { CalendarDatePipe } from './calendar-date.pipe';\nimport { CalendarEventTitlePipe } from './calendar-event-title.pipe';\nimport { ClickDirective } from './click.directive';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\nimport { CalendarUtils } from './calendar-utils.provider';\n\nexport interface CalendarModuleConfig {\n  eventTitleFormatter?: Provider;\n  dateFormatter?: Provider;\n  utils?: Provider;\n}\n\nexport * from './calendar-event-title-formatter.provider';\nexport * from './calendar-moment-date-formatter.provider';\nexport * from './calendar-native-date-formatter.provider';\nexport * from './calendar-angular-date-formatter.provider';\nexport * from './calendar-date-formatter.provider';\nexport * from './calendar-utils.provider';\nexport * from './calendar-date-formatter.interface';\nexport * from './calendar-event-times-changed-event.interface';\n\nexport {\n  CalendarEvent,\n  EventAction as CalendarEventAction,\n  DAYS_OF_WEEK,\n  ViewPeriod as CalendarViewPeriod\n} from 'calendar-utils';\n\n/**\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\n *\n * ```typescript\n * import { CalendarCommonModule } from 'angular-calendar/modules/common';\n * import { CalendarMonthModule } from 'angular-calendar/modules/month';\n *\n * @NgModule({\n *   imports: [\n *     CalendarCommonModule.forRoot(),\n *     CalendarMonthModule\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  declarations: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    ClickDirective\n  ],\n  imports: [CommonModule],\n  exports: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    ClickDirective\n  ],\n  entryComponents: [CalendarTooltipWindowComponent]\n})\nexport class CalendarCommonModule {\n  static forRoot(config: CalendarModuleConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: CalendarCommonModule,\n      providers: [\n        DraggableHelper,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils\n      ]\n    };\n  }\n}\n",
    "import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  WeekDay,\n  MonthView,\n  MonthViewDay,\n  ViewPeriod\n} from 'calendar-utils';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport isSameDay from 'date-fns/is_same_day/index';\nimport setDate from 'date-fns/set_date/index';\nimport setMonth from 'date-fns/set_month/index';\nimport setYear from 'date-fns/set_year/index';\nimport getDate from 'date-fns/get_date/index';\nimport getMonth from 'date-fns/get_month/index';\nimport getYear from 'date-fns/get_year/index';\nimport differenceInSeconds from 'date-fns/difference_in_seconds/index';\nimport addSeconds from 'date-fns/add_seconds/index';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByIndex } from '../common/util';\n\nexport interface CalendarMonthViewBeforeRenderEvent {\n  header: WeekDay[];\n  body: MonthViewDay[];\n  period: ViewPeriod;\n}\n\nexport interface CalendarMonthViewEventTimesChangedEvent\n  extends CalendarEventTimesChangedEvent {\n  day: MonthViewDay;\n}\n\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```typescript\n * <mwl-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-month-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-month-view',\n  template: `\n    <div class=\"cal-month-view\">\n      <mwl-calendar-month-view-header\n        [days]=\"columnHeaders\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\">\n      </mwl-calendar-month-view-header>\n      <div class=\"cal-days\">\n        <div *ngFor=\"let rowIndex of view.rowOffsets; trackByIndex\">\n          <div class=\"cal-cell-row\">\n            <mwl-calendar-month-cell\n              *ngFor=\"let day of (view.days | slice : rowIndex : rowIndex + (view.totalDaysVisibleInWeek)); trackBy:trackByDate\"\n              [class.cal-drag-over]=\"day.dragOver\"\n              [ngClass]=\"day?.cssClass\"\n              [day]=\"day\"\n              [openDay]=\"openDay\"\n              [locale]=\"locale\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [customTemplate]=\"cellTemplate\"\n              (click)=\"handleDayClick($event, day)\"\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\n              mwlDroppable\n              (dragEnter)=\"day.dragOver = true\"\n              (dragLeave)=\"day.dragOver = false\"\n              (drop)=\"day.dragOver = false; eventDropped(day, $event.dropData.event)\"\n              (eventClicked)=\"eventClicked.emit({event: $event.event})\">\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [isOpen]=\"openRowIndex === rowIndex\"\n            [events]=\"openDay?.events\"\n            [customTemplate]=\"openDayEventsTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            (eventClicked)=\"eventClicked.emit({event: $event.event})\">\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarMonthViewComponent\n  implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view.\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * Whether the events list for the day of the `viewDate` option is visible or not\n   */\n  @Input() activeDayIsOpen: boolean = false;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: string = 'top';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The start number of the week\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use to replace the day cell\n   */\n  @Input() cellTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for the slide down box of events for the active day\n   */\n  @Input() openDayEventsTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * An output that will be called before the view is rendered for the current month.\n   * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarMonthViewBeforeRenderEvent>();\n\n  /**\n   * Called when the day cell is clicked\n   */\n  @Output()\n  dayClicked = new EventEmitter<{\n    day: MonthViewDay;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an event is dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<\n    CalendarMonthViewEventTimesChangedEvent\n  >();\n\n  /**\n   * @hidden\n   */\n  columnHeaders: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: MonthView;\n\n  /**\n   * @hidden\n   */\n  openRowIndex: number;\n\n  /**\n   * @hidden\n   */\n  openDay: MonthViewDay;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  trackByIndex = trackByIndex;\n\n  /**\n   * @hidden\n   */\n  trackByDate = (index: number, day: MonthViewDay) => day.date.toISOString();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays ||\n      changes.weekendDays\n    ) {\n      this.refreshBody();\n    }\n\n    if (\n      changes.activeDayIsOpen ||\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays\n    ) {\n      this.checkActiveDayIsOpen();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\n    this.view.days.forEach(day => {\n      if (isHighlighted && day.events.indexOf(event) > -1) {\n        day.backgroundColor =\n          (event.color && event.color.secondary) || '#D1E8FF';\n      } else {\n        delete day.backgroundColor;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(day: MonthViewDay, event: CalendarEvent): void {\n    const year: number = getYear(day.date);\n    const month: number = getMonth(day.date);\n    const date: number = getDate(day.date);\n    const newStart: Date = setDate(\n      setMonth(setYear(event.start, year), month),\n      date\n    );\n    let newEnd: Date;\n    if (event.end) {\n      const secondsDiff: number = differenceInSeconds(newStart, event.start);\n      newEnd = addSeconds(event.end, secondsDiff);\n    }\n    this.eventTimesChanged.emit({ event, newStart, newEnd, day });\n  }\n\n  /**\n   * @hidden\n   */\n  handleDayClick(clickEvent: any, day: MonthViewDay) {\n    // when using hammerjs, stopPropagation doesn't work. See https://github.com/mattlewis92/angular-calendar/issues/318\n    if (!clickEvent.target.classList.contains('cal-event')) {\n      this.dayClicked.emit({ day });\n    }\n  }\n\n  private refreshHeader(): void {\n    this.columnHeaders = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshBody(): void {\n    this.view = this.utils.getMonthView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private checkActiveDayIsOpen(): void {\n    if (this.activeDayIsOpen === true) {\n      this.openDay = this.view.days.find(day =>\n        isSameDay(day.date, this.viewDate)\n      );\n      const index: number = this.view.days.indexOf(this.openDay);\n      this.openRowIndex =\n        Math.floor(index / this.view.totalDaysVisibleInWeek) *\n        this.view.totalDaysVisibleInWeek;\n    } else {\n      this.openRowIndex = null;\n      this.openDay = null;\n    }\n  }\n\n  private refreshAll(): void {\n    this.columnHeaders = null;\n    this.view = null;\n    this.refreshHeader();\n    this.refreshBody();\n    this.checkActiveDayIsOpen();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.columnHeaders && this.view) {\n      this.beforeViewRender.emit({\n        header: this.columnHeaders,\n        body: this.view.days,\n        period: this.view.period\n      });\n    }\n  }\n}\n",
    "import { Component, Input, TemplateRef } from '@angular/core';\nimport { WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-month-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\">\n      <div class=\"cal-cell-row cal-header\">\n        <div\n          class=\"cal-cell\"\n          *ngFor=\"let day of days; trackBy:trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\">\n          {{ day.date | calendarDate:'monthViewColumnHeader':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale}\">\n    </ng-template>\n  `\n})\nexport class CalendarMonthViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n",
    "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\nimport { trackByEventId } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-month-cell',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-day=\"day\"\n      let-openDay=\"openDay\"\n      let-locale=\"locale\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-highlightDay=\"highlightDay\"\n      let-unhighlightDay=\"unhighlightDay\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div class=\"cal-cell-top\">\n        <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>\n        <span class=\"cal-day-number\">{{ day.date | calendarDate:'monthViewDayNumber':locale }}</span>\n      </div>\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\n        <div\n          class=\"cal-event\"\n          *ngFor=\"let event of day.events; trackBy:trackByEventId\"\n          [style.backgroundColor]=\"event.color?.primary\"\n          [ngClass]=\"event?.cssClass\"\n          (mouseenter)=\"highlightDay.emit({event: event})\"\n          (mouseleave)=\"unhighlightDay.emit({event: event})\"\n          [mwlCalendarTooltip]=\"event.title | calendarEventTitle:'monthTooltip':event\"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipEvent]=\"event\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          mwlDraggable\n          [dropData]=\"{event: event}\"\n          [dragAxis]=\"{x: event.draggable, y: event.draggable}\"\n          (mwlClick)=\"eventClicked.emit({ event: event })\">\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `,\n  host: {\n    class: 'cal-cell cal-day-cell',\n    '[class.cal-past]': 'day.isPast',\n    '[class.cal-today]': 'day.isToday',\n    '[class.cal-future]': 'day.isFuture',\n    '[class.cal-weekend]': 'day.isWeekend',\n    '[class.cal-in-month]': 'day.inMonth',\n    '[class.cal-out-month]': '!day.inMonth',\n    '[class.cal-has-events]': 'day.events.length > 0',\n    '[class.cal-open]': 'day === openDay',\n    '[style.backgroundColor]': 'day.backgroundColor'\n  }\n})\nexport class CalendarMonthCellComponent {\n  @Input() day: MonthViewDay;\n\n  @Input() openDay: MonthViewDay;\n\n  @Input() locale: string;\n\n  @Input() tooltipPlacement: string;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() highlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output() unhighlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n}\n",
    "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, transition, animate } from '@angular/animations';\nimport { CalendarEvent } from 'calendar-utils';\nimport { trackByEventId } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-open-day-events',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-events=\"events\"\n      let-eventClicked=\"eventClicked\">\n      <div\n        *ngFor=\"let event of events; trackBy:trackByEventId\"\n        [ngClass]=\"event?.cssClass\"\n        mwlDraggable\n        [dropData]=\"{event: event}\"\n        [dragAxis]=\"{x: event.draggable, y: event.draggable}\">\n        <span\n          class=\"cal-event\"\n          [style.backgroundColor]=\"event.color?.primary\">\n        </span>\n        <mwl-calendar-event-title\n          [event]=\"event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"month\"\n          (mwlClick)=\"eventClicked.emit({event: event})\">\n        </mwl-calendar-event-title>\n        <mwl-calendar-event-actions [event]=\"event\"></mwl-calendar-event-actions>\n      </div>\n    </ng-template>\n    <div class=\"cal-open-day-events\" [@collapse] *ngIf=\"isOpen\">\n      <ng-template\n        [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n        [ngTemplateOutletContext]=\"{\n          events: events,\n          eventClicked: eventClicked\n        }\">\n      </ng-template>\n    </div>\n  `,\n  animations: [\n    trigger('collapse', [\n      transition('void => *', [\n        style({ height: 0, overflow: 'hidden' }),\n        animate('150ms', style({ height: '*' }))\n      ]),\n      transition('* => void', [\n        style({ height: '*', overflow: 'hidden' }),\n        animate('150ms', style({ height: 0 }))\n      ])\n    ])\n  ]\n})\nexport class CalendarOpenDayEventsComponent {\n  @Input() isOpen: boolean = false;\n\n  @Input() events: CalendarEvent[];\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarMonthViewComponent } from './calendar-month-view.component';\nimport { CalendarMonthViewHeaderComponent } from './calendar-month-view-header.component';\nimport { CalendarMonthCellComponent } from './calendar-month-cell.component';\nimport { CalendarOpenDayEventsComponent } from './calendar-open-day-events.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarMonthViewComponent,\n  CalendarMonthViewBeforeRenderEvent,\n  CalendarMonthViewEventTimesChangedEvent\n} from './calendar-month-view.component';\nexport { MonthViewDay as CalendarMonthViewDay } from 'calendar-utils';\n\n@NgModule({\n  imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\n  declarations: [\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ],\n  exports: [\n    DragAndDropModule,\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ]\n})\nexport class CalendarMonthModule {}\n",
    "import { isInside } from './util';\n\nexport class CalendarDragHelper {\n  startPosition: ClientRect;\n\n  constructor(\n    private dragContainerElement: HTMLElement,\n    draggableElement: HTMLElement\n  ) {\n    this.startPosition = draggableElement.getBoundingClientRect();\n  }\n\n  validateDrag({ x, y }: { x: number; y: number }): boolean {\n    const newRect: ClientRect = Object.assign({}, this.startPosition, {\n      left: this.startPosition.left + x,\n      right: this.startPosition.right + x,\n      top: this.startPosition.top + y,\n      bottom: this.startPosition.bottom + y\n    });\n\n    return isInside(this.dragContainerElement.getBoundingClientRect(), newRect);\n  }\n}\n",
    "import { isInside } from './util';\n\nexport class CalendarResizeHelper {\n  constructor(\n    private resizeContainerElement: HTMLElement,\n    private minWidth?: number\n  ) {}\n\n  validateResize({ rectangle }: { rectangle: ClientRect }): boolean {\n    if (this.minWidth && rectangle.width < this.minWidth) {\n      return false;\n    }\n\n    return isInside(\n      this.resizeContainerElement.getBoundingClientRect(),\n      rectangle\n    );\n  }\n}\n",
    "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnChanges,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport {\n  WeekDay,\n  CalendarEvent,\n  WeekViewEvent,\n  WeekView,\n  ViewPeriod\n} from 'calendar-utils';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport addDays from 'date-fns/add_days/index';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByIndex } from '../common/util';\n\nexport interface WeekViewEventResize {\n  originalOffset: number;\n  originalSpan: number;\n  edge: string;\n}\n\nexport interface CalendarWeekViewBeforeRenderEvent {\n  header: WeekDay[];\n  period: ViewPeriod;\n}\n\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * <mwl-calendar-week-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-week-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-week-view',\n  template: `\n    <div class=\"cal-week-view\" #weekViewContainer>\n      <mwl-calendar-week-view-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\n        (eventDropped)=\"eventTimesChanged.emit($event)\">\n      </mwl-calendar-week-view-header>\n      <div *ngFor=\"let eventRow of view.eventRows; trackBy:trackByIndex\" #eventRowContainer class=\"cal-events-row\">\n        <div\n          *ngFor=\"let weekEvent of eventRow.row; trackBy:trackByEventId\"\n          #event\n          class=\"cal-event-container\"\n          [class.cal-draggable]=\"weekEvent.event.draggable\"\n          [class.cal-starts-within-week]=\"!weekEvent.startsBeforeWeek\"\n          [class.cal-ends-within-week]=\"!weekEvent.endsAfterWeek\"\n          [ngClass]=\"weekEvent.event?.cssClass\"\n          [style.width]=\"((100 / days.length) * weekEvent.span) + '%'\"\n          [style.marginLeft]=\"((100 / days.length) * weekEvent.offset) + '%'\"\n          mwlResizable\n          [resizeEdges]=\"{left: weekEvent.event?.resizable?.beforeStart, right: weekEvent.event?.resizable?.afterEnd}\"\n          [resizeSnapGrid]=\"{left: dayColumnWidth, right: dayColumnWidth}\"\n          [validateResize]=\"validateResize\"\n          (resizeStart)=\"resizeStarted(weekViewContainer, weekEvent, $event)\"\n          (resizing)=\"resizing(weekEvent, $event, dayColumnWidth)\"\n          (resizeEnd)=\"resizeEnded(weekEvent)\"\n          mwlDraggable\n          [dragAxis]=\"{x: weekEvent.event.draggable && currentResizes.size === 0, y: false}\"\n          [dragSnapGrid]=\"{x: dayColumnWidth}\"\n          [validateDrag]=\"validateDrag\"\n          (dragPointerDown)=\"dragStart(weekViewContainer, event)\"\n          (dragEnd)=\"eventDragged(weekEvent, $event.x, dayColumnWidth)\">\n          <mwl-calendar-week-view-event\n            [weekEvent]=\"weekEvent\"\n            [tooltipPlacement]=\"tooltipPlacement\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipAppendToBody]=\"tooltipAppendToBody\"\n            [customTemplate]=\"eventTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            (eventClicked)=\"eventClicked.emit({event: weekEvent.event})\">\n          </mwl-calendar-week-view-event>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarWeekViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: string = 'bottom';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The start number of the week\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for week view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * The precision to display events.\n   * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n   */\n  @Input() precision: 'days' | 'minutes' = 'days';\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\n   */\n  @Output()\n  dayHeaderClicked: EventEmitter<{ day: WeekDay }> = new EventEmitter<{\n    day: WeekDay;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged: EventEmitter<\n    CalendarEventTimesChangedEvent\n  > = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current week.\n   * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarWeekViewBeforeRenderEvent>();\n\n  /**\n   * @hidden\n   */\n  days: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: WeekView;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResizes: Map<WeekViewEvent, WeekViewEventResize> = new Map();\n\n  /**\n   * @hidden\n   */\n  validateDrag: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  dayColumnWidth: number;\n\n  /**\n   * @hidden\n   */\n  trackByIndex = trackByIndex;\n\n  /**\n   * @hidden\n   */\n  trackByEventId = (index: number, weekEvent: WeekViewEvent) =>\n    weekEvent.event.id ? weekEvent.event.id : weekEvent;\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (changes.events || changes.viewDate || changes.excludeDays) {\n      this.refreshBody();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  resizeStarted(\n    weekViewContainer: HTMLElement,\n    weekEvent: WeekViewEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.currentResizes.set(weekEvent, {\n      originalOffset: weekEvent.offset,\n      originalSpan: weekEvent.span,\n      edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n    });\n    this.dayColumnWidth = this.getDayColumnWidth(weekViewContainer);\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      weekViewContainer,\n      this.dayColumnWidth\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  resizing(\n    weekEvent: WeekViewEvent,\n    resizeEvent: ResizeEvent,\n    dayWidth: number\n  ): void {\n    const currentResize: WeekViewEventResize = this.currentResizes.get(\n      weekEvent\n    );\n\n    if (resizeEvent.edges.left) {\n      const diff: number = Math.round(+resizeEvent.edges.left / dayWidth);\n      weekEvent.offset = currentResize.originalOffset + diff;\n      weekEvent.span = currentResize.originalSpan - diff;\n    } else if (resizeEvent.edges.right) {\n      const diff: number = Math.round(+resizeEvent.edges.right / dayWidth);\n      weekEvent.span = currentResize.originalSpan + diff;\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  resizeEnded(weekEvent: WeekViewEvent): void {\n    const currentResize: WeekViewEventResize = this.currentResizes.get(\n      weekEvent\n    );\n\n    let daysDiff: number;\n    if (currentResize.edge === 'left') {\n      daysDiff = weekEvent.offset - currentResize.originalOffset;\n    } else {\n      daysDiff = weekEvent.span - currentResize.originalSpan;\n    }\n\n    weekEvent.offset = currentResize.originalOffset;\n    weekEvent.span = currentResize.originalSpan;\n\n    let newStart: Date = weekEvent.event.start;\n    let newEnd: Date = weekEvent.event.end;\n    if (currentResize.edge === 'left') {\n      newStart = addDays(newStart, daysDiff);\n    } else if (newEnd) {\n      newEnd = addDays(newEnd, daysDiff);\n    }\n\n    this.eventTimesChanged.emit({ newStart, newEnd, event: weekEvent.event });\n    this.currentResizes.delete(weekEvent);\n  }\n\n  /**\n   * @hidden\n   */\n  eventDragged(\n    weekEvent: WeekViewEvent,\n    draggedByPx: number,\n    dayWidth: number\n  ): void {\n    const daysDragged: number = draggedByPx / dayWidth;\n    const newStart: Date = addDays(weekEvent.event.start, daysDragged);\n    let newEnd: Date;\n    if (weekEvent.event.end) {\n      newEnd = addDays(weekEvent.event.end, daysDragged);\n    }\n\n    this.eventTimesChanged.emit({ newStart, newEnd, event: weekEvent.event });\n  }\n\n  /**\n   * @hidden\n   */\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n  }\n\n  /**\n   * @hidden\n   */\n  dragStart(weekViewContainer: HTMLElement, event: HTMLElement): void {\n    this.dayColumnWidth = this.getDayColumnWidth(weekViewContainer);\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      weekViewContainer,\n      event\n    );\n    this.validateDrag = ({ x, y }) =>\n      this.currentResizes.size === 0 && dragHelper.validateDrag({ x, y });\n    this.cdr.markForCheck();\n  }\n\n  private refreshHeader(): void {\n    this.days = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshBody(): void {\n    this.view = this.utils.getWeekView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      precision: this.precision,\n      absolutePositionedEvents: true\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.days && this.view) {\n      this.beforeViewRender.emit({\n        header: this.days,\n        period: this.view.period\n      });\n    }\n  }\n}\n",
    "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarEvent, WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-week-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-dayHeaderClicked=\"dayHeaderClicked\"\n      let-eventDropped=\"eventDropped\">\n      <div class=\"cal-day-headers\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days; trackBy:trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [class.cal-drag-over]=\"day.dragOver\"\n          [ngClass]=\"day.cssClass\"\n          (mwlClick)=\"dayHeaderClicked.emit({day: day})\"\n          mwlDroppable\n          (dragEnter)=\"day.dragOver = true\"\n          (dragLeave)=\"day.dragOver = false\"\n          (drop)=\"day.dragOver = false; eventDropped.emit({event: $event.dropData.event, newStart: day.date})\">\n          <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\n          <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale, dayHeaderClicked: dayHeaderClicked, eventDropped: eventDropped}\">\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Output()\n  dayHeaderClicked: EventEmitter<{ day: WeekDay }> = new EventEmitter<{\n    day: WeekDay;\n  }>();\n\n  @Output()\n  eventDropped: EventEmitter<{\n    event: CalendarEvent;\n    newStart: Date;\n  }> = new EventEmitter<{ event: CalendarEvent; newStart: Date }>();\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n",
    "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { WeekViewEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-week-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-weekEvent=\"weekEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"weekEvent.event.color?.secondary\"\n        [style.borderColor]=\"weekEvent.event.color?.primary\"\n        [mwlCalendarTooltip]=\"weekEvent.event.title | calendarEventTitle:'weekTooltip':weekEvent.event\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"weekEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\">\n        <mwl-calendar-event-actions [event]=\"weekEvent.event\"></mwl-calendar-event-actions>\n        <mwl-calendar-event-title\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"week\"\n          (mwlClick)=\"eventClicked.emit()\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewEventComponent {\n  @Input() weekEvent: WeekViewEvent;\n\n  @Input() tooltipPlacement: string;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarWeekViewComponent } from './calendar-week-view.component';\nimport { CalendarWeekViewHeaderComponent } from './calendar-week-view-header.component';\nimport { CalendarWeekViewEventComponent } from './calendar-week-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarWeekViewComponent,\n  CalendarWeekViewBeforeRenderEvent\n} from './calendar-week-view.component';\nexport {\n  WeekViewEvent as CalendarWeekViewEvent,\n  WeekViewEventRow as CalendarWeekViewEventRow,\n  GetWeekViewArgs as CalendarGetWeekViewArgs\n} from 'calendar-utils';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule\n  ],\n  declarations: [\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent\n  ]\n})\nexport class CalendarWeekModule {}\n",
    "import {\n  Component,\n  Input,\n  OnChanges,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  LOCALE_ID,\n  Inject,\n  OnInit,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  DayView,\n  DayViewHour,\n  DayViewHourSegment,\n  DayViewEvent,\n  ViewPeriod\n} from 'calendar-utils';\nimport { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport addMinutes from 'date-fns/add_minutes/index';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByEventId } from '../common/util';\n\nexport interface CalendarDayViewBeforeRenderEvent {\n  body: {\n    hourGrid: DayViewHour[];\n  };\n  period: ViewPeriod;\n}\n\n/**\n * @hidden\n */\nconst MINUTES_IN_HOUR: number = 60;\n\n/**\n * @hidden\n */\nexport interface DayViewEventResize {\n  originalTop: number;\n  originalHeight: number;\n  edge: string;\n}\n\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * <mwl-calendar-day-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-day-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-day-view',\n  template: `\n    <div class=\"cal-day-view\" #dayViewContainer>\n      <mwl-calendar-all-day-event\n        *ngFor=\"let event of view.allDayEvents; trackBy:trackByEventId\"\n        [event]=\"event\"\n        [customTemplate]=\"allDayEventTemplate\"\n        [eventTitleTemplate]=\"eventTitleTemplate\"\n        (eventClicked)=\"eventClicked.emit({event: event})\">\n      </mwl-calendar-all-day-event>\n      <div class=\"cal-hour-rows\">\n        <div class=\"cal-events\">\n          <div\n            #event\n            *ngFor=\"let dayEvent of view?.events; trackBy:trackByDayEvent\"\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"dayEvent.event.draggable\"\n            [class.cal-starts-within-day]=\"!dayEvent.startsBeforeDay\"\n            [class.cal-ends-within-day]=\"!dayEvent.endsAfterDay\"\n            [ngClass]=\"dayEvent.event.cssClass\"\n            mwlResizable\n            [resizeEdges]=\"{top: dayEvent.event?.resizable?.beforeStart, bottom: dayEvent.event?.resizable?.afterEnd}\"\n            [resizeSnapGrid]=\"{top: eventSnapSize, bottom: eventSnapSize}\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"resizeStarted(dayEvent, $event, dayViewContainer)\"\n            (resizing)=\"resizing(dayEvent, $event)\"\n            (resizeEnd)=\"resizeEnded(dayEvent)\"\n            mwlDraggable\n            [dragAxis]=\"{x: false, y: dayEvent.event.draggable && currentResizes.size === 0}\"\n            [dragSnapGrid]=\"{y: eventSnapSize}\"\n            [validateDrag]=\"validateDrag\"\n            (dragPointerDown)=\"dragStart(event, dayViewContainer)\"\n            (dragEnd)=\"eventDragged(dayEvent, $event.y)\"\n            [style.marginTop.px]=\"dayEvent.top\"\n            [style.height.px]=\"dayEvent.height\"\n            [style.marginLeft.px]=\"dayEvent.left + 70\"\n            [style.width.px]=\"dayEvent.width - 1\">\n            <mwl-calendar-day-view-event\n              [dayEvent]=\"dayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              (eventClicked)=\"eventClicked.emit({event: dayEvent.event})\">\n            </mwl-calendar-day-view-event>\n          </div>\n        </div>\n        <div class=\"cal-hour\" *ngFor=\"let hour of hours; trackBy:trackByHour\" [style.minWidth.px]=\"view?.width + 70\">\n          <mwl-calendar-day-view-hour-segment\n            *ngFor=\"let segment of hour.segments; trackBy:trackByHourSegment\"\n            [style.height.px]=\"hourSegmentHeight\"\n            [segment]=\"segment\"\n            [segmentHeight]=\"hourSegmentHeight\"\n            [locale]=\"locale\"\n            [customTemplate]=\"hourSegmentTemplate\"\n            (click)=\"hourSegmentClicked.emit({date: segment.date})\"\n            [class.cal-drag-over]=\"segment.dragOver\"\n            mwlDroppable\n            (dragEnter)=\"segment.dragOver = true\"\n            (dragLeave)=\"segment.dragOver = false\"\n            (drop)=\"segment.dragOver = false; eventDropped($event, segment)\">\n          </mwl-calendar-day-view-hour-segment>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarDayViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input() hourSegments: number = 2;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input() hourSegmentHeight: number = 30;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input() dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input() dayEndMinute: number = 59;\n\n  /**\n   * The width in pixels of each event on the view\n   */\n  @Input() eventWidth: number = 150;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The grid size to snap resizing and dragging of events to\n   */\n  @Input() eventSnapSize: number = this.hourSegmentHeight;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: string = 'top';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input() hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for all day events\n   */\n  @Input() allDayEventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for day view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * Called when an event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output()\n  hourSegmentClicked = new EventEmitter<{\n    date: Date;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current day.\n   * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarDayViewBeforeRenderEvent>();\n\n  /**\n   * @hidden\n   */\n  hours: DayViewHour[] = [];\n\n  /**\n   * @hidden\n   */\n  view: DayView;\n\n  /**\n   * @hidden\n   */\n  width: number = 0;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResizes: Map<DayViewEvent, DayViewEventResize> = new Map();\n\n  /**\n   * @hidden\n   */\n  validateDrag: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  trackByEventId = trackByEventId;\n\n  /**\n   * @hidden\n   */\n  trackByDayEvent = (index: number, dayEvent: DayViewEvent) =>\n    dayEvent.event.id ? dayEvent.event.id : dayEvent.event;\n\n  /**\n   * @hidden\n   */\n  trackByHour = (index: number, hour: DayViewHour) =>\n    hour.segments[0].date.toISOString();\n\n  /**\n   * @hidden\n   */\n  trackByHourSegment = (index: number, segment: DayViewHourSegment) =>\n    segment.date.toISOString();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (\n      changes.viewDate ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.hourSegments\n    ) {\n      this.refreshHourGrid();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.eventWidth\n    ) {\n      this.refreshView();\n    }\n  }\n\n  eventDropped(\n    dropEvent: { dropData?: { event?: CalendarEvent } },\n    segment: DayViewHourSegment\n  ): void {\n    if (dropEvent.dropData && dropEvent.dropData.event) {\n      this.eventTimesChanged.emit({\n        event: dropEvent.dropData.event,\n        newStart: segment.date\n      });\n    }\n  }\n\n  resizeStarted(\n    event: DayViewEvent,\n    resizeEvent: ResizeEvent,\n    dayViewContainer: HTMLElement\n  ): void {\n    this.currentResizes.set(event, {\n      originalTop: event.top,\n      originalHeight: event.height,\n      edge: typeof resizeEvent.edges.top !== 'undefined' ? 'top' : 'bottom'\n    });\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      dayViewContainer\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  resizing(event: DayViewEvent, resizeEvent: ResizeEvent): void {\n    const currentResize: DayViewEventResize = this.currentResizes.get(event);\n    if (resizeEvent.edges.top) {\n      event.top = currentResize.originalTop + +resizeEvent.edges.top;\n      event.height = currentResize.originalHeight - +resizeEvent.edges.top;\n    } else if (resizeEvent.edges.bottom) {\n      event.height = currentResize.originalHeight + +resizeEvent.edges.bottom;\n    }\n  }\n\n  resizeEnded(dayEvent: DayViewEvent): void {\n    const currentResize: DayViewEventResize = this.currentResizes.get(dayEvent);\n\n    let pixelsMoved: number;\n    if (currentResize.edge === 'top') {\n      pixelsMoved = dayEvent.top - currentResize.originalTop;\n    } else {\n      pixelsMoved = dayEvent.height - currentResize.originalHeight;\n    }\n\n    dayEvent.top = currentResize.originalTop;\n    dayEvent.height = currentResize.originalHeight;\n\n    const pixelAmountInMinutes: number =\n      MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\n    const minutesMoved: number = pixelsMoved * pixelAmountInMinutes;\n    let newStart: Date = dayEvent.event.start;\n    let newEnd: Date = dayEvent.event.end;\n    if (currentResize.edge === 'top') {\n      newStart = addMinutes(newStart, minutesMoved);\n    } else if (newEnd) {\n      newEnd = addMinutes(newEnd, minutesMoved);\n    }\n\n    this.eventTimesChanged.emit({ newStart, newEnd, event: dayEvent.event });\n    this.currentResizes.delete(dayEvent);\n  }\n\n  dragStart(event: HTMLElement, dayViewContainer: HTMLElement): void {\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      dayViewContainer,\n      event\n    );\n    this.validateDrag = ({ x, y }) =>\n      this.currentResizes.size === 0 && dragHelper.validateDrag({ x, y });\n    this.cdr.markForCheck();\n  }\n\n  eventDragged(dayEvent: DayViewEvent, draggedInPixels: number): void {\n    const pixelAmountInMinutes: number =\n      MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\n    const minutesMoved: number = draggedInPixels * pixelAmountInMinutes;\n    const newStart: Date = addMinutes(dayEvent.event.start, minutesMoved);\n    let newEnd: Date;\n    if (dayEvent.event.end) {\n      newEnd = addMinutes(dayEvent.event.end, minutesMoved);\n    }\n    this.eventTimesChanged.emit({ newStart, newEnd, event: dayEvent.event });\n  }\n\n  private refreshHourGrid(): void {\n    this.hours = this.utils.getDayViewHourGrid({\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      }\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshView(): void {\n    this.view = this.utils.getDayView({\n      events: this.events,\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      },\n      eventWidth: this.eventWidth,\n      segmentHeight: this.hourSegmentHeight\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshAll(): void {\n    this.refreshHourGrid();\n    this.refreshView();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.hours && this.view) {\n      this.beforeViewRender.emit({\n        body: {\n          hourGrid: this.hours\n        },\n        period: this.view.period\n      });\n    }\n  }\n}\n",
    "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-all-day-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-eventClicked=\"eventClicked\">\n      <div\n        class=\"cal-all-day-event\"\n        [style.backgroundColor]=\"event.color?.secondary\"\n        [style.borderColor]=\"event.color?.primary\">\n        <mwl-calendar-event-actions [event]=\"event\"></mwl-calendar-event-actions>\n        <mwl-calendar-event-title\n          [event]=\"event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"day\"\n          (mwlClick)=\"eventClicked.emit()\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        eventClicked: eventClicked\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarAllDayEventComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n",
    "import { Component, Input, TemplateRef } from '@angular/core';\nimport { DayViewHourSegment } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-day-view-hour-segment',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\">\n      <div\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\">\n        <div class=\"cal-time\">\n          {{ segment.date | calendarDate:'dayViewHour':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarDayViewHourSegmentComponent {\n  @Input() segment: DayViewHourSegment;\n\n  @Input() segmentHeight: number;\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n",
    "import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { DayViewEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-day-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-dayEvent=\"dayEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"dayEvent.event.color?.secondary\"\n        [style.borderColor]=\"dayEvent.event.color?.primary\"\n        [mwlCalendarTooltip]=\"dayEvent.event.title | calendarEventTitle:'dayTooltip':dayEvent.event\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"dayEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\">\n        <mwl-calendar-event-actions [event]=\"dayEvent.event\"></mwl-calendar-event-actions>\n        <mwl-calendar-event-title\n          [event]=\"dayEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"day\"\n          (mwlClick)=\"eventClicked.emit()\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        dayEvent: dayEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarDayViewEventComponent {\n  @Input() dayEvent: DayViewEvent;\n\n  @Input() tooltipPlacement: string;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarDayViewComponent } from './calendar-day-view.component';\nimport { CalendarAllDayEventComponent } from './calendar-all-day-event.component';\nimport { CalendarDayViewHourSegmentComponent } from './calendar-day-view-hour-segment.component';\nimport { CalendarDayViewEventComponent } from './calendar-day-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarDayViewComponent,\n  CalendarDayViewBeforeRenderEvent\n} from './calendar-day-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule\n  ],\n  declarations: [\n    CalendarDayViewComponent,\n    CalendarAllDayEventComponent,\n    CalendarDayViewHourSegmentComponent,\n    CalendarDayViewEventComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarDayViewComponent,\n    CalendarAllDayEventComponent,\n    CalendarDayViewHourSegmentComponent,\n    CalendarDayViewEventComponent\n  ]\n})\nexport class CalendarDayModule {}\n",
    "import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DraggableHelper } from 'angular-draggable-droppable';\nimport {\n  CalendarCommonModule,\n  CalendarModuleConfig,\n  CalendarEventTitleFormatter,\n  CalendarDateFormatter,\n  CalendarUtils\n} from './common/calendar-common.module';\nimport { CalendarMonthModule } from './month/calendar-month.module';\nimport { CalendarWeekModule } from './week/calendar-week.module';\nimport { CalendarDayModule } from './day/calendar-day.module';\n\nexport * from './common/calendar-common.module';\nexport * from './month/calendar-month.module';\nexport * from './week/calendar-week.module';\nexport * from './day/calendar-day.module';\n\n/**\n * The main module of this library. Example usage:\n *\n * ```typescript\n * import { CalenderModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalenderModule.forRoot()\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  imports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule\n  ],\n  exports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule\n  ]\n})\nexport class CalendarModule {\n  static forRoot(config: CalendarModuleConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: CalendarModule,\n      providers: [\n        DraggableHelper,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils\n      ]\n    };\n  }\n}\n"
  ],
  "names": [
    "extendStatics",
    "Object",
    "setPrototypeOf",
    "__proto__",
    "Array",
    "d",
    "b",
    "p",
    "hasOwnProperty",
    "__read",
    "o",
    "n",
    "m",
    "Symbol",
    "iterator",
    "r",
    "e",
    "i",
    "call",
    "ar",
    "next",
    "done",
    "push",
    "value",
    "error",
    "validateEvents",
    "events",
    "validateEventsWithoutLog",
    "args",
    "_i",
    "arguments",
    "length",
    "console",
    "warn",
    "apply",
    "concat",
    "__spread",
    "isInside",
    "outer",
    "inner",
    "left",
    "right",
    "top",
    "bottom",
    "trackByEventId",
    "index",
    "event",
    "id",
    "trackByWeekDayHeaderDate",
    "day",
    "date",
    "toISOString",
    "trackByIndex",
    "CalendarEventActionsComponent",
    "this",
    "type",
    "Component",
    "selector",
    "template",
    "Input",
    "CalendarEventTitleComponent",
    "customTemplate",
    "view",
    "CalendarTooltipWindowComponent",
    "contents",
    "placement",
    "CalendarTooltipDirective",
    "elementRef",
    "injector",
    "renderer",
    "componentFactoryResolver",
    "viewContainerRef",
    "document",
    "positioning",
    "Positioning",
    "tooltipFactory",
    "resolveComponentFactory",
    "prototype",
    "ngOnDestroy",
    "hide",
    "onMouseOver",
    "show",
    "onMouseOut",
    "_this",
    "tooltipRef",
    "createComponent",
    "instance",
    "appendToBody",
    "body",
    "appendChild",
    "location",
    "nativeElement",
    "requestAnimationFrame",
    "positionTooltip",
    "remove",
    "indexOf",
    "hostView",
    "targetPosition",
    "positionElements",
    "children",
    "elm",
    "setStyle",
    "Directive",
    "ElementRef",
    "Injector",
    "Renderer2",
    "ComponentFactoryResolver",
    "ViewContainerRef",
    "undefined",
    "decorators",
    "Inject",
    "DOCUMENT",
    "HostListener",
    "CalendarPreviousViewDirective",
    "viewDateChange",
    "EventEmitter",
    "onClick",
    "subFn",
    "subDays",
    "week",
    "subWeeks",
    "month",
    "subMonths",
    "emit",
    "viewDate",
    "Output",
    "CalendarNextViewDirective",
    "addFn",
    "addDays",
    "addWeeks",
    "addMonths",
    "CalendarTodayDirective",
    "startOfToday",
    "CalendarAngularDateFormatter",
    "monthViewColumnHeader",
    "_a",
    "locale",
    "DatePipe",
    "transform",
    "monthViewDayNumber",
    "monthViewTitle",
    "weekViewColumnHeader",
    "weekViewColumnSubHeader",
    "weekViewTitle",
    "year",
    "getISOWeek",
    "dayViewHour",
    "dayViewTitle",
    "CalendarDateFormatter",
    "_super",
    "__",
    "constructor",
    "create",
    "tslib_1.__extends",
    "CalendarDatePipe",
    "dateFormatter",
    "method",
    "Pipe",
    "name",
    "LOCALE_ID",
    "CalendarEventTitleFormatter",
    "title",
    "monthTooltip",
    "weekTooltip",
    "dayTooltip",
    "CalendarEventTitlePipe",
    "calendarEventTitle",
    "titleType",
    "ClickDirective",
    "click",
    "ngOnInit",
    "eventName",
    "window",
    "removeListener",
    "listen",
    "CalendarUtils",
    "getMonthView",
    "getWeekViewHeader",
    "getWeekView",
    "getDayView",
    "getDayViewHourGrid",
    "Injectable",
    "MOMENT",
    "InjectionToken",
    "CalendarMomentDateFormatter",
    "moment",
    "format",
    "CalendarNativeDateFormatter",
    "Intl",
    "DateTimeFormat",
    "weekday",
    "hour",
    "CalendarCommonModule",
    "forRoot",
    "config",
    "ngModule",
    "providers",
    "DraggableHelper",
    "eventTitleFormatter",
    "utils",
    "NgModule",
    "declarations",
    "imports",
    "CommonModule",
    "exports",
    "entryComponents",
    "CalendarMonthViewComponent",
    "cdr",
    "excludeDays",
    "activeDayIsOpen",
    "tooltipPlacement",
    "tooltipAppendToBody",
    "beforeViewRender",
    "dayClicked",
    "eventClicked",
    "eventTimesChanged",
    "trackByDate",
    "refresh",
    "refreshSubscription",
    "subscribe",
    "refreshAll",
    "markForCheck",
    "ngOnChanges",
    "changes",
    "weekendDays",
    "refreshHeader",
    "refreshBody",
    "checkActiveDayIsOpen",
    "unsubscribe",
    "toggleDayHighlight",
    "isHighlighted",
    "days",
    "forEach",
    "backgroundColor",
    "color",
    "secondary",
    "eventDropped",
    "newEnd",
    "getYear",
    "getMonth",
    "getDate",
    "newStart",
    "setDate",
    "setMonth",
    "setYear",
    "start",
    "end",
    "secondsDiff",
    "differenceInSeconds",
    "addSeconds",
    "handleDayClick",
    "clickEvent",
    "target",
    "classList",
    "contains",
    "columnHeaders",
    "weekStartsOn",
    "excluded",
    "emitBeforeViewRender",
    "openDay",
    "find",
    "isSameDay",
    "openRowIndex",
    "Math",
    "floor",
    "totalDaysVisibleInWeek",
    "header",
    "period",
    "ChangeDetectorRef",
    "tooltipTemplate",
    "headerTemplate",
    "cellTemplate",
    "openDayEventsTemplate",
    "eventTitleTemplate",
    "CalendarMonthViewHeaderComponent",
    "CalendarMonthCellComponent",
    "highlightDay",
    "unhighlightDay",
    "host",
    "class",
    "[class.cal-past]",
    "[class.cal-today]",
    "[class.cal-future]",
    "[class.cal-weekend]",
    "[class.cal-in-month]",
    "[class.cal-out-month]",
    "[class.cal-has-events]",
    "[class.cal-open]",
    "[style.backgroundColor]",
    "CalendarOpenDayEventsComponent",
    "isOpen",
    "animations",
    "trigger",
    "transition",
    "style",
    "height",
    "overflow",
    "animate",
    "CalendarMonthModule",
    "DragAndDropModule",
    "CalendarDragHelper",
    "dragContainerElement",
    "draggableElement",
    "startPosition",
    "getBoundingClientRect",
    "validateDrag",
    "x",
    "y",
    "newRect",
    "assign",
    "CalendarResizeHelper",
    "resizeContainerElement",
    "minWidth",
    "validateResize",
    "rectangle",
    "width",
    "CalendarWeekViewComponent",
    "precision",
    "dayHeaderClicked",
    "currentResizes",
    "Map",
    "weekEvent",
    "resizeStarted",
    "weekViewContainer",
    "resizeEvent",
    "set",
    "originalOffset",
    "offset",
    "originalSpan",
    "span",
    "edge",
    "edges",
    "dayColumnWidth",
    "getDayColumnWidth",
    "resizeHelper",
    "resizing",
    "dayWidth",
    "currentResize",
    "get",
    "diff",
    "round",
    "resizeEnded",
    "daysDiff",
    "delete",
    "eventDragged",
    "draggedByPx",
    "daysDragged",
    "eventRowContainer",
    "offsetWidth",
    "dragStart",
    "dragHelper",
    "size",
    "absolutePositionedEvents",
    "eventTemplate",
    "CalendarWeekViewHeaderComponent",
    "CalendarWeekViewEventComponent",
    "CalendarWeekModule",
    "ResizableModule",
    "CalendarDayViewComponent",
    "hourSegments",
    "hourSegmentHeight",
    "dayStartHour",
    "dayStartMinute",
    "dayEndHour",
    "dayEndMinute",
    "eventWidth",
    "eventSnapSize",
    "hourSegmentClicked",
    "hours",
    "trackByDayEvent",
    "dayEvent",
    "trackByHour",
    "segments",
    "trackByHourSegment",
    "segment",
    "refreshHourGrid",
    "refreshView",
    "dropEvent",
    "dropData",
    "dayViewContainer",
    "originalTop",
    "originalHeight",
    "pixelsMoved",
    "minutesMoved",
    "addMinutes",
    "draggedInPixels",
    "dayStart",
    "minute",
    "dayEnd",
    "segmentHeight",
    "hourGrid",
    "hourSegmentTemplate",
    "allDayEventTemplate",
    "CalendarAllDayEventComponent",
    "CalendarDayViewHourSegmentComponent",
    "CalendarDayViewEventComponent",
    "CalendarDayModule",
    "CalendarModule"
  ],
  "mappings": "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"
}
